use std::ptr::NonNull;

use num::{
    bigint::{IntDigits, RandBigInt},
    BigUint, Integer, One, Zero,
};
use rand::thread_rng;

#[repr(C)]
pub struct mpz_t {
    pub alloc: i32,
    pub size: i32,
    pub d: NonNull<u64>,
}

unsafe extern "C" {
    #[link_name = "__gmpz_jacobi"]
    pub fn mpz_jacobi(a: *const mpz_t, p: *const mpz_t) -> i32;
}

pub fn jacobi(a: &BigUint, p: &BigUint) -> i32 {
    let mpz_a = mpz_t {
        alloc: 0,
        size: a.len().cast_signed() as i32,
        d: NonNull::from(a.digits()).as_non_null_ptr(),
    };
    let mpz_p = mpz_t {
        alloc: 0,
        size: p.len().cast_signed() as i32,
        d: NonNull::from(p.digits()).as_non_null_ptr(),
    };
    unsafe { mpz_jacobi(&raw const mpz_a, &raw const mpz_p) }
}

// 0 <= n <= p - 1,  find x^2 = n
pub fn quadratic_residue(n: &BigUint, p: &BigUint) -> Option<BigUint> {
    let mut b = BigUint::one();
    if n.is_zero() {
        return Some(BigUint::ZERO);
    }
    if p.digits() == [2] {
        return Some(b);
    }
    if jacobi(n, p) == -1 {
        return None;
    }
    let mut rng = thread_rng();
    let (mut a, q) = loop {
        let a = rng.gen_biguint_below(p);
        let q = (&a * &a + p - n) % p;
        if !q.is_zero() && jacobi(&q, p) == -1 {
            break (a, q);
        }
    };

    let mut exp = (p + 1u32) / 2u32;

    while exp.is_even() {
        (a, b) = ((&a * &a + &b * &b * &q) % p, (&a * &b * 2u32) % p);
        exp >>= 1;
    }

    if exp.is_one() {
        let pa = p - &a;
        return Some(a.min(pa));
    }

    let mut fa = a.clone();
    #[allow(clippy::redundant_clone)] // false positive
    let mut fb = b.clone();
    while !exp.is_one() {
        exp >>= 1;
        (a, b) = ((&a * &a + &b * &b * &q) % p, (&a * &b * 2u32) % p);
        if exp.is_odd() {
            (fa, fb) = ((&a * &fa + &b * &fb * &q) % p, (&a * &fb + &b * &fa) % p);
        }
    }

    let pa = p - &fa;
    Some(fa.min(pa))
}

#[cfg(test)]
mod test {
    use std::str::FromStr;

    use num::BigUint;

    use super::{jacobi, quadratic_residue};

    #[test]
    fn jacobi_test() {
        #[rustfmt::skip]
        let tests = [
            ("1", "3", 1),
            ("2", "7", 1),
            ("8", "11", -1),
            ("17", "19", 1),
            ("46", "59", 1),
            ("72", "107", -1),
            ("124", "139", 1),
            ("41", "439", -1),
            ("666", "769", -1),
            ("1353", "1753", 1),
            ("1659", "2767", -1),
            ("2471", "7583", 1),
            ("2467", "10691", -1),
            ("4089", "24623", 1),
            ("14774", "41621", 1),
            ("31429", "109357", 1),
            ("83155", "156119", 1),
            ("272393", "319519", 1),
            ("588653", "628687", 1),
            ("83241", "1785313", 1),
            ("1941865", "3203957", 1),
            ("4303266", "8087797", 1),
            ("11277967", "14133013", -1),
            ("7204461", "27291521", 1),
            ("2064350", "37031069", -1),
            ("44045883", "111284171", -1),
            ("144750115", "259088887", -1),
            ("36272924", "536124899", 1),
            ("472159819", "856934329", 1),
            ("512216818", "1676155333", -1),
            ("1388823058", "2193097129", -1),
            ("2820232600", "5905596839", 1),
            ("7554220953", "12044638633", 1),
            ("11434836289", "25971824777", -1),
            ("41003866862", "51243325643", -1),
            ("54860380730", "116196121807", 1),
            ("206616388015", "209100951571", -1),
            ("110842361086", "308811437861", -1),
            ("566437381214", "671804230807", 1),
            ("123375109646", "1190541404827", 1),
            ("777161274856", "4009854583837", -1),
            ("3098687787664", "4597702669717", 1),
            ("11164043099216", "11508469095737", 1),
            ("15634502870591", "17979082298147", -1),
            ("46726437032943", "53053506089663", -1),
            ("78795987240025", "122315484257959", -1),
            ("82720165318389", "236214642973717", -1),
            ("230176878238786", "350944254440693", -1),
            ("216838233790084", "663517437543577", 1),
            ("145998398273791", "1595362964585927", -1),
            ("3344049673165765", "4349598478138817", 1),
            ("1456732815564264", "7003571800648531", 1),
            ("3384584763097610", "15130135186707257", 1),
            ("983687161411013", "23533622649649939", -1),
            ("26157663619786901", "49053915500286077", 1),
            ("16266239522862707", "119650523932982767", 1),
            ("152434826414158203", "170047273414179779", 1),
            ("41472518848515463", "504285318848955311", -1),
            ("439776037087242555", "843544865001745171", -1),
            ("99234610114196383", "1383648096200136539", -1),
            ("652050283882559230", "4216863245806339321", 1),
            ("3052448625901243692", "7248945724689640313", 1),
            ("3414729853898199292", "10041292399808404403", -1),
            ("3289098175140376023", "18705468446802001219", 1),
            ("3036276261961113018", "47646031813904875277", -1),
            ("68843147922708104117", "98079718604888635207", -1),
            ("215633730182925452383", "217674878313690760771", 1),
            ("1035456368116872818", "485727586661742137021", -1),
            ("719852666000316991046", "895196684500006935853", 1),
            ("1683296522008327350297", "1919548172354657933243", -1),
            ("2648907197861518918900", "2652086957356950397849", -1),
            ("5251892527858968387043", "7168068960158309361581", 1),
            ("7979676508173392972037", "16342586575211966687203", -1),
            ("12400744344545173924494", "36254616581882410348387", 1),
            ("48663103552626272660986", "65144879782733718340033", 1),
            ("81168780278010488932829", "94294938700405419954547", 1),
            ("88168583794861406947900", "191934150586797200583877", 1),
            ("96591903694265763185306", "476426946939536748711113", 1),
            ("81810741928018841313873", "1059008249816352576294137", -1),
            ("205630017807492163486853", "1659177233564189297488619", 1),
            ("3091073576480822694500653", "3822534929973050934668713", -1),
            ("3118250261977177402821085", "5870963667136145537453441", -1),
            ("12968499099217375809440821", "14885309829027571177845113", 1),
            ("22881385759262567927181626", "24310794574017373824215299", 1),
            ("44307374829366108723981890", "67561168900184515767978673", 1),
            ("50667677222899761146982116", "99361153507586476025937107", 1),
            ("190795345923625039967337793", "278028935466309978080403029", -1),
            ("450386463428427499579162352", "508635351542687116158948211", 1),
            ("817770639323851228506863561", "1232182922314301453197340983", 1),
            ("608638945055311644194203427", "2169026424346627223493270131", 1),
            ("1810336609559042492106372610", "3318012661049816072440498333", 1),
            ("5379922856000305013750249098", "5876194230736542092844682303", 1),
            ("3657808355875219491909441510", "14510449892969287114486921321", -1),
            ("20439222377536948729634776630", "22965938862697945056139880377", -1),
            ("2363021530459461319533349898", "55479449737304695958942457233", -1),
            ("16432606038300333659372723857", "82162963072002847934606020289", -1),
            ("12648466534445759731600017009", "219575793441865445479078510141", -1),
            ("322568325050805017490795795217", "522609180750994490465668406179", -1),
            ("352738814168592766752159432055", "636734176452813891880996581901", -1),
            ("728506403316379502870782186405", "1742888112058991884222027805983", -1),
            ("1747905236769494734805047632045", "2987003706831951491565340322657", -1),
            ("1306751603763397790249874018917", "9348824043598387217692889750939", -1),
            ("4545107339459852760463828409950", "15163334322713411200005608240843", -1),
            ("14486728587179404275536330955250", "35579326236006659618034639142903", -1),
            ("25801023388793225005188501837317", "47370888945278469262088358500629", -1),
            ("33263680658261791946050785899820", "135240390502273074641827407494351", 1),
            ("288310461316710019332146435842389", "303910063100629585724311348193243", 1),
            ("101420311457766216852923894199876", "447832946198002964274863595337723", 1),
            ("18180602019068985712121554110357", "1094489494486506202663651688040331", 1),
            ("556131465664495059496791699541363", "1301131272566153959621646724437437", 1),
            ("2262468517850967279413396270832485", "5186529457535616677154281744156461", -1),
            ("293060667627821121835189300396201", "8970512837254445059742471556256967", 1),
            ("15126399334866744568540839008130363", "17093575876038436948530577791588151", -1),
            ("1370164307297207850539405310604298", "34178544033254135131005587993338633", -1),
            ("21487291103923513527578832647183224", "56748390428456543970438172869589613", -1),
            ("45743304580051379836054444737401130", "101755805015141565189991756098311471", -1),
            ("139142982774807352304433393757291487", "226895235806166973998530083828253861", 1),
            ("409442986295701140154446247235330375", "518261062684509841992241662943086487", -1),
            ("99577510417456020166146339559310823", "864040172367125613971205854929095503", 1),
            ("1089470874565074238286040478869974158", "1546169986882663467057092395950178633", -1),
            ("936304684367455668346518992560209722", "3893856432242300704534135322652943591", 1),
            ("4880627387238252064884124197487940739", "6908933379859872287963745563223235379", 1),
            ("16358676951156560926980694295882791793", "18456597409707363638988908551637739877", -1),
            ("37081841953635682865877952704758247253", "37172517261598233403443979224236553977", 1),
            ("43305137454008268086300879269348685299", "61743196222758696979062314064861805009", 1),
            ("119291956873859150545925212701798813093", "139439329946982726687651398324801994431", 1),
            ("159292864164049007001913292120495267987", "201706247291756054350779888609668868187", -1),
        ];
        for (a, p, expected) in tests {
            assert_eq!(
                jacobi(
                    &BigUint::from_str(a).unwrap(),
                    &BigUint::from_str(p).unwrap()
                ),
                expected
            );
        }
    }

    #[test]
    fn quadratic_residue_test() {
        #[rustfmt::skip]
        let tests = [
            ("1", "3", Some("1")),
            ("4", "7", Some("2")),
            ("8", "11", None),
            ("17", "19", Some("6")),
            ("46", "59", Some("20")),
            ("72", "107", None),
            ("124", "139", Some("47")),
            ("41", "439", None),
            ("666", "769", None),
            ("1353", "1753", Some("236")),
            ("1659", "2767", None),
            ("2471", "7583", Some("2188")),
            ("2467", "10691", None),
            ("4089", "24623", Some("5034")),
            ("14774", "41621", Some("16187")),
            ("31429", "109357", Some("14992")),
            ("83155", "156119", Some("71624")),
            ("272393", "319519", Some("70578")),
            ("588653", "628687", Some("287018")),
            ("83241", "1785313", Some("453349")),
            ("1941865", "3203957", Some("1456156")),
            ("4303266", "8087797", Some("3022775")),
            ("11277967", "14133013", None),
            ("7204461", "27291521", Some("10372972")),
            ("2064350", "37031069", None),
            ("44045883", "111284171", None),
            ("144750115", "259088887", None),
            ("36272924", "536124899", Some("64560827")),
            ("472159819", "856934329", Some("425685140")),
            ("512216818", "1676155333", None),
            ("1388823058", "2193097129", None),
            ("2820232600", "5905596839", Some("815716192")),
            ("7554220953", "12044638633", Some("5394405373")),
            ("11434836289", "25971824777", None),
            ("41003866862", "51243325643", None),
            ("54860380730", "116196121807", Some("24386973969")),
            ("206616388015", "209100951571", None),
            ("110842361086", "308811437861", None),
            ("566437381214", "671804230807", Some("45626083712")),
            ("123375109646", "1190541404827", Some("503286545092")),
            ("777161274856", "4009854583837", None),
            ("3098687787664", "4597702669717", Some("810665395448")),
            ("11164043099216", "11508469095737", Some("825616590659")),
            ("15634502870591", "17979082298147", None),
            ("46726437032943", "53053506089663", None),
            ("78795987240025", "122315484257959", None),
            ("82720165318389", "236214642973717", None),
            ("230176878238786", "350944254440693", None),
            ("216838233790084", "663517437543577", Some("206382186024904")),
            ("145998398273791", "1595362964585927", None),
            ("3344049673165765", "4349598478138817", Some("1735196737869083")),
            ("1456732815564264", "7003571800648531", Some("2821658064570537")),
            ("3384584763097610", "15130135186707257", Some("7386978532262161")),
            ("983687161411013", "23533622649649939", None),
            ("26157663619786901", "49053915500286077", Some("4487033576478061")),
            ("16266239522862707", "119650523932982767", Some("53964040479935112")),
            ("152434826414158203", "170047273414179779", Some("81850002819909599")),
            ("41472518848515463", "504285318848955311", None),
            ("439776037087242555", "843544865001745171", None),
            ("99234610114196383", "1383648096200136539", None),
            ("652050283882559230", "4216863245806339321", Some("478258949824049222")),
            ("3052448625901243692", "7248945724689640313", Some("2104557789773277029")),
            ("3414729853898199292", "10041292399808404403", None),
            ("3289098175140376023", "18705468446802001219", Some("7069468207044251959")),
            ("3036276261961113018", "47646031813904875277", None),
            ("68843147922708104117", "98079718604888635207", None),
            ("215633730182925452383", "217674878313690760771", Some("45983469400202548116")),
            ("1035456368116872818", "485727586661742137021", None),
            ("719852666000316991046", "895196684500006935853", Some("206575257889778717410")),
            ("1683296522008327350297", "1919548172354657933243", None),
            ("2648907197861518918900", "2652086957356950397849", None),
            ("5251892527858968387043", "7168068960158309361581", Some("1386034441274780234708")),
            ("7979676508173392972037", "16342586575211966687203", None),
            ("12400744344545173924494", "36254616581882410348387", Some("17433509683739523361493")),
            ("48663103552626272660986", "65144879782733718340033", Some("23672869521221832105174")),
            ("81168780278010488932829", "94294938700405419954547", Some("10359921167924059092210")),
            ("88168583794861406947900", "191934150586797200583877", Some("33982835166550513073866")),
            ("96591903694265763185306", "476426946939536748711113", Some("187481042889215396871772")),
            ("81810741928018841313873", "1059008249816352576294137", None),
            ("205630017807492163486853", "1659177233564189297488619", Some("806626177865707860905010")),
            ("3091073576480822694500653", "3822534929973050934668713", None),
            ("3118250261977177402821085", "5870963667136145537453441", None),
            ("12968499099217375809440821", "14885309829027571177845113", Some("5929264705643305645088767")),
            ("22881385759262567927181626", "24310794574017373824215299", Some("8326044186850839591788671")),
            ("44307374829366108723981890", "67561168900184515767978673", Some("4327542648176874703948942")),
            ("50667677222899761146982116", "99361153507586476025937107", Some("42447464957260824412732673")),
            ("190795345923625039967337793", "278028935466309978080403029", None),
            ("450386463428427499579162352", "508635351542687116158948211", Some("250013263930350427649829762")),
            ("817770639323851228506863561", "1232182922314301453197340983", Some("543389381371104788961995723")),
            ("608638945055311644194203427", "2169026424346627223493270131", Some("221433468502740845461439689")),
            ("1810336609559042492106372610", "3318012661049816072440498333", Some("553201865175413596632746289")),
            ("5379922856000305013750249098", "5876194230736542092844682303", Some("2285842270456230917806776016")),
            ("3657808355875219491909441510", "14510449892969287114486921321", None),
            ("20439222377536948729634776630", "22965938862697945056139880377", None),
            ("2363021530459461319533349898", "55479449737304695958942457233", None),
            ("16432606038300333659372723857", "82162963072002847934606020289", None),
            ("12648466534445759731600017009", "219575793441865445479078510141", None),
            ("322568325050805017490795795217", "522609180750994490465668406179", None),
            ("352738814168592766752159432055", "636734176452813891880996581901", None),
            ("728506403316379502870782186405", "1742888112058991884222027805983", None),
            ("1747905236769494734805047632045", "2987003706831951491565340322657", None),
            ("1306751603763397790249874018917", "9348824043598387217692889750939", None),
            ("4545107339459852760463828409950", "15163334322713411200005608240843", None),
            ("14486728587179404275536330955250", "35579326236006659618034639142903", None),
            ("25801023388793225005188501837317", "47370888945278469262088358500629", None),
            ("33263680658261791946050785899820", "135240390502273074641827407494351", Some("3412308806058149067615126448325")),
            ("288310461316710019332146435842389", "303910063100629585724311348193243", Some("48682590608341497842684025236561")),
            ("101420311457766216852923894199876", "447832946198002964274863595337723", Some("199528309542956110338147834079419")),
            ("18180602019068985712121554110357", "1094489494486506202663651688040331", Some("240040787125416300438793411307681")),
            ("556131465664495059496791699541363", "1301131272566153959621646724437437", Some("246117912747567161597131167194287")),
            ("2262468517850967279413396270832485", "5186529457535616677154281744156461", None),
            ("293060667627821121835189300396201", "8970512837254445059742471556256967", Some("1851058237508064068417785204351771")),
            ("15126399334866744568540839008130363", "17093575876038436948530577791588151", None),
            ("1370164307297207850539405310604298", "34178544033254135131005587993338633", None),
            ("21487291103923513527578832647183224", "56748390428456543970438172869589613", None),
            ("45743304580051379836054444737401130", "101755805015141565189991756098311471", None),
            ("139142982774807352304433393757291487", "226895235806166973998530083828253861", Some("57037210757541854348813322455596226")),
            ("409442986295701140154446247235330375", "518261062684509841992241662943086487", None),
            ("99577510417456020166146339559310823", "864040172367125613971205854929095503", Some("335073206022326861546046211292782766")),
            ("1089470874565074238286040478869974158", "1546169986882663467057092395950178633", None),
            ("936304684367455668346518992560209722", "3893856432242300704534135322652943591", Some("1346826092017176146299709042874113342")),
            ("4880627387238252064884124197487940739", "6908933379859872287963745563223235379", Some("2054080291215141897195158542978888045")),
            ("16358676951156560926980694295882791793", "18456597409707363638988908551637739877", None),
            ("37081841953635682865877952704758247253", "37172517261598233403443979224236553977", Some("2430915567660493860431586755921695512")),
            ("43305137454008268086300879269348685299", "61743196222758696979062314064861805009", Some("27250396381616513578989934719653037510")),
            ("119291956873859150545925212701798813093", "139439329946982726687651398324801994431", Some("69507397118966317412972861759147500580")),
            ("159292864164049007001913292120495267987", "201706247291756054350779888609668868187", None),
        ];
        for (a, p, expected) in tests {
            assert_eq!(
                quadratic_residue(
                    &BigUint::from_str(a).unwrap(),
                    &BigUint::from_str(p).unwrap(),
                ),
                expected.map(|x| BigUint::from_str(x).unwrap())
            );
        }
    }
}
