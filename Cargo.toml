cargo-features = ["edition2024"]

[package]
name = "q"
version = "1.1.2"
authors = ["jkjkmxmx <yhx12243@gmail.com>"]
edition = "2024"
description = "Implementation of ideal unique factorization of quadratic integer domains"
repository = "https://github.com/yhx-12243/q"

[dependencies]
anyhow = { version = "1.0.86", features = ["backtrace"] }
clap = { version = "4.5.15", features = ["derive", "unicode", "wrap_help", "env", "string", "unstable-v5"] }
clap_derive = { version = "4.5.13", features = ["unstable-v5"] }
hashbrown = { version = "0.14.5", features = ["serde"] }
nix = { version = "0.29.0", features = ["signal"] }
num = { version = "0.4.3", features = ["rand"] }
rand = { version = "0.8.5", features = ["log", "nightly"] }
serde = { version = "1.0.206", features = ["derive"] }
serde_json = { version = "1.0.124", features = ["float_roundtrip"] }
smallvec = { version = "1.13.2", features = ["const_new", "may_dangle", "specialization", "union"] }

[lints.rust]
internal_features  = { level = "allow", priority = 1 }
non_snake_case = { level = "allow", priority = 1 }

[lints.clippy]
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
absolute_paths = { level = "allow", priority = 1 }
arithmetic_side_effects = { level = "allow", priority = 1 }
as_conversions = { level = "allow", priority = 1 }
# cast_lossless = { level = "allow", priority = 1 } # u32 -> u64
cast_possible_truncation = { level = "allow", priority = 1 } # u64 -> u32
# cast_possible_wrap = { level = "allow", priority = 1 } # u32 -> i32
# cast_sign_loss = { level = "allow", priority = 1 } # i32 -> u32
default_numeric_fallback = { level = "allow", priority = 1 }
option_if_let_else = { level = "allow", priority = 1 }
future_not_send = { level = "allow", priority = 1 }
host_endian_bytes = { level = "allow", priority = 1 }
implicit_return = { level = "allow", priority = 1 }
indexing_slicing = { level = "allow", priority = 1 }
inline_always = { level = "allow", priority = 1 }
integer_division = { level = "allow", priority = 1 }
integer_division_remainder_used = { level = "allow", priority = 1 }
many_single_char_names = { level = "allow", priority = 1 }
min_ident_chars = { level = "allow", priority = 1 }
missing_assert_message = { level = "allow", priority = 1 }
missing_docs_in_private_items = { level = "allow", priority = 1 }
missing_errors_doc = { level = "allow", priority = 1 }
missing_panics_doc = { level = "allow", priority = 1 }
missing_trait_methods = { level = "allow", priority = 1 }
module_name_repetitions = { level = "allow", priority = 1 }
multiple_unsafe_ops_per_block = { level = "allow", priority = 1 }
needless_pass_by_value = { level = "allow", priority = 1 }
non_ascii_literal = { level = "allow", priority = 1 }
pattern_type_mismatch = { level = "allow", priority = 1 }
pub_use = { level = "allow", priority = 1 }
question_mark_used = { level = "allow", priority = 1 }
ref_patterns = { level = "allow", priority = 1 }
self_named_module_files = { level = "allow", priority = 1 }
separated_literal_suffix = { level = "allow", priority = 1 }
shadow_reuse = { level = "allow", priority = 1 }
shadow_same = { level = "allow", priority = 1 }
shadow_unrelated = { level = "allow", priority = 1 }
similar_names = { level = "allow", priority = 1 }
single_call_fn = { level = "allow", priority = 1 }
single_char_lifetime_names = { level = "allow", priority = 1 }
std_instead_of_alloc = { level = "allow", priority = 1 }
std_instead_of_core = { level = "allow", priority = 1 }
string_add = { level = "allow", priority = 1 }
string_slice = { level = "allow", priority = 1 }
unseparated_literal_suffix = { level = "allow", priority = 1 }
wildcard_enum_match_arm = { level = "allow", priority = 1 }

[[bin]]
name = "q"
path = "src/main.rs"
